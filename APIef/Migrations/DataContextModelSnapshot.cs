// <auto-generated />
using APIef.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIef.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APIef.Models.Genre", b =>
                {
                    b.Property<int>("dbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("dbId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tmdbId")
                        .HasColumnType("int");

                    b.HasKey("dbId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            dbId = 1,
                            Name = "Action",
                            tmdbId = 28
                        },
                        new
                        {
                            dbId = 2,
                            Name = "Adventure",
                            tmdbId = 12
                        },
                        new
                        {
                            dbId = 3,
                            Name = "Animation",
                            tmdbId = 16
                        },
                        new
                        {
                            dbId = 4,
                            Name = "Comedy",
                            tmdbId = 35
                        },
                        new
                        {
                            dbId = 5,
                            Name = "Crime",
                            tmdbId = 80
                        },
                        new
                        {
                            dbId = 6,
                            Name = "Documentary",
                            tmdbId = 99
                        },
                        new
                        {
                            dbId = 7,
                            Name = "Drama",
                            tmdbId = 18
                        },
                        new
                        {
                            dbId = 8,
                            Name = "Family",
                            tmdbId = 10751
                        },
                        new
                        {
                            dbId = 9,
                            Name = "Fantasy",
                            tmdbId = 14
                        },
                        new
                        {
                            dbId = 10,
                            Name = "History",
                            tmdbId = 36
                        },
                        new
                        {
                            dbId = 11,
                            Name = "Horror",
                            tmdbId = 27
                        },
                        new
                        {
                            dbId = 12,
                            Name = "Music",
                            tmdbId = 10402
                        },
                        new
                        {
                            dbId = 13,
                            Name = "Mystery",
                            tmdbId = 9648
                        },
                        new
                        {
                            dbId = 14,
                            Name = "Romance",
                            tmdbId = 10749
                        },
                        new
                        {
                            dbId = 15,
                            Name = "Science Fiction",
                            tmdbId = 878
                        },
                        new
                        {
                            dbId = 16,
                            Name = "TV Movie",
                            tmdbId = 10770
                        },
                        new
                        {
                            dbId = 17,
                            Name = "Thriller",
                            tmdbId = 53
                        },
                        new
                        {
                            dbId = 18,
                            Name = "War",
                            tmdbId = 10752
                        },
                        new
                        {
                            dbId = 19,
                            Name = "Western",
                            tmdbId = 37
                        });
                });

            modelBuilder.Entity("APIef.Models.Movie", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BackdropPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Overview")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Popularity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosterPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReleaseDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoteAvredge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoteCount")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("APIef.Models.MovieCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MovieCollections");
                });

            modelBuilder.Entity("APIef.Models.MovieList", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoomId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("MovieLists");
                });

            modelBuilder.Entity("APIef.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Name = "Regular"
                        },
                        new
                        {
                            RoleId = 2,
                            Name = "Premium"
                        },
                        new
                        {
                            RoleId = 3,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("APIef.Models.Room", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStarted")
                        .HasColumnType("bit");

                    b.Property<int>("UsersInRoom")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("APIef.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsPremium")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserName");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserName = "admin",
                            IsPremium = true,
                            Password = "admin",
                            RoleId = 3
                        },
                        new
                        {
                            UserName = "regular",
                            IsPremium = false,
                            Password = "regular",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("MovieMovieCollection", b =>
                {
                    b.Property<int>("MovieCollectionsId")
                        .HasColumnType("int");

                    b.Property<string>("MoviesId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MovieCollectionsId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("MovieCollectionMovies", (string)null);
                });

            modelBuilder.Entity("MovieMovieList", b =>
                {
                    b.Property<string>("MovieListsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoviesId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MovieListsId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("MovieMovieLists", (string)null);
                });

            modelBuilder.Entity("APIef.Models.MovieList", b =>
                {
                    b.HasOne("APIef.Models.Room", null)
                        .WithMany("MovieLists")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("APIef.Models.User", b =>
                {
                    b.HasOne("APIef.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MovieMovieCollection", b =>
                {
                    b.HasOne("APIef.Models.MovieCollection", null)
                        .WithMany()
                        .HasForeignKey("MovieCollectionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIef.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieMovieList", b =>
                {
                    b.HasOne("APIef.Models.MovieList", null)
                        .WithMany()
                        .HasForeignKey("MovieListsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIef.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APIef.Models.Room", b =>
                {
                    b.Navigation("MovieLists");
                });
#pragma warning restore 612, 618
        }
    }
}
